version: '3.8'

services:
  # MongoDB データベース
  mongodb:
    image: mongo:7.0
    container_name: fomage-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: fomage
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fomage-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Express (管理UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: fomage-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - fomage-network

  # Fomage アプリケーション
  fomage-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fomage-app
    restart: unless-stopped
    environment:
      # アプリケーション設定
      APP_NAME: Fomage
      APP_VERSION: 1.0.0
      ENVIRONMENT: development
      SERVER_PORT: 8080
      SERVER_HOST: 0.0.0.0
      
      # MongoDB設定
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/fomage?authSource=admin
      MONGODB_DATABASE: fomage
      MONGODB_MAX_POOL_SIZE: 10
      MONGODB_CONNECT_TIMEOUT: 30000
      MONGODB_SOCKET_TIMEOUT: 30000
      
      # ログ設定
      LOG_LEVEL: INFO
      LOG_FILE_PATH: logs/application.log
      
      # セキュリティ設定
      JWT_SECRET: development-jwt-secret-key-change-in-production
      JWT_EXPIRATION: 3600
      JWT_REFRESH_EXPIRATION: 86400
      
      # パフォーマンス設定
      COROUTINE_DISPATCHER_SIZE: 4
      DB_MAX_POOL_SIZE: 10
      DB_MIN_POOL_SIZE: 2
      
      # 開発環境設定
      DEV_MODE: "true"
      DEBUG_MODE: "false"
      HOT_RELOAD: "true"
      
      # 監視・メトリクス設定
      METRICS_ENABLED: "true"
      METRICS_PORT: 9090
      HEALTH_CHECK_ENABLED: "true"
      
      # キャッシュ設定
      CACHE_ENABLED: "true"
      CACHE_TTL: 3600
      CACHE_MAX_SIZE: 1000
    ports:
      - "8080:8080"
      - "9090:9090"
    volumes:
      - app_logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - fomage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Grafana (ダッシュボード)
  grafana:
    image: grafana/grafana:latest
    container_name: fomage-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - fomage-network

volumes:
  mongodb_data:
    driver: local
  app_logs:
    driver: local
  grafana_data:
    driver: local

networks:
  fomage-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 